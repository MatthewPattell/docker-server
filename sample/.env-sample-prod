# ENVIRONMENT
PROJECT_ENVIRONMENT=PROD

# SERVER
SERVER_HTTP_PORT=0
SERVER_SSL_PORT=0
NGINX_LIMIT_KEY=change_this_string

# MYSQL
MYSQL_HOST=my.host
MYSQL_PORT=3306
MYSQL_ROOT_PASSWORD=test
MYSQL_DATABASE=test
MYSQL_USER=test
MYSQL_PASSWORD=test1

# REDIS
REDIS_HOST=redis.host
REDIS_PORT=6379
REDIS_PASSWORD=test
REDIS_DATABASE=1

# SSH
SSH_PASSWORD=test

# PROJECT
PROJECT_NAME=project_x
# /drive is a root folder in your server
PROJECT_ROOT=${empty}/drive/project_x
PROJECT_DOCKER_FOLDER=${PROJECT_ROOT}/docker
PACKAGE_DOCKER_FOLDER=$PROJECT_ROOT/

# Only if needed
RUN_SERVER_COMPOSER=1

# only for prod
PROJECT_ENV_PATH_FORCE=/Users/you_user_name/you_computer_project_folder/docker

# DOMAINS
# DOMAIN_API=api.sample.com
DOMAIN_COMMON=sample.com
# DOMAIN_OPCACHE=opcache.sample.com
# DOMAIN_ADMIN=xadmin.sample.com

# SSL DOMAINS
SSL_DOMAINS[0]="admin@sample.com :api.sample.com sample.com:"

SERVICES="-f !!docker-compose.yml -f !!docker-compose.prod.yml -f docker/docker-compose.common.yml"

# IMAGES (use this image if you are not going to do autoscaling)
SERVER_REPOSITORY=matthewpatell/universal-docker-server:3.9

# OTHER CONFIGS
# https://github.com/settings/tokens
GIT_AUTHTOKEN=your_token

# AWS
# if you use AWS (replace region with your)
AWS_UPDATE_TASK="ecs-cli compose --project-name sample_name -SERVICES- create --ecs-profile your_profile --region eu-west-1"

# Build and upload your config if you run with AWS or other container services
AWS_UPDATE_ENV="ssh root@your_prod_server sudo chmod 777 $PROJECT_DOCKER_FOLDER/.env && scp $PROJECT_ENV_PATH_FORCE/.env-compiled root@your_prod_server:$PROJECT_DOCKER_FOLDER/.env"